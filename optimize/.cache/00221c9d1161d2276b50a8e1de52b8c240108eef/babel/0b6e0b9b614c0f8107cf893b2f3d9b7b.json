{"remainingRequest":"/home/mazza/kibana_6.20/kibana-6.2_Pirelli/node_modules/babel-loader/lib/index.js??ref--6-1!/home/mazza/kibana_6.20/kibana-6.2_Pirelli/src/ui/public/courier/data_source/build_query/build_es_query.js","dependencies":[{"path":"/home/mazza/kibana_6.20/kibana-6.2_Pirelli/src/ui/public/courier/data_source/build_query/build_es_query.js","mtime":1526650528251},{"path":"/home/mazza/kibana_6.20/kibana-6.2_Pirelli/node_modules/cache-loader/dist/cjs.js","mtime":1526650760833},{"path":"/home/mazza/kibana_6.20/kibana-6.2_Pirelli/node_modules/babel-loader/lib/index.js","mtime":1526650754489}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BuildESQueryProvider = BuildESQueryProvider;\n\nvar _lodash = require('lodash');\n\nvar _decorate_query = require('../_decorate_query');\n\nvar _from_kuery = require('./from_kuery');\n\nvar _from_filters = require('./from_filters');\n\nvar _from_lucene = require('./from_lucene');\n\nfunction BuildESQueryProvider(Private) {\n  var decorateQuery = Private(_decorate_query.DecorateQueryProvider);\n\n  /**\n   *\n   * @param queries - an array of query objects. Each query has a language property and a query property.\n   * @param filters - an array of filter objects\n   */\n  function buildESQuery(indexPattern) {\n    var queries = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var filters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n    var validQueries = queries.filter(function (query) {\n      return (0, _lodash.has)(query, 'query');\n    });\n    var queriesByLanguage = (0, _lodash.groupBy)(validQueries, 'language');\n\n    var kueryQuery = (0, _from_kuery.buildQueryFromKuery)(indexPattern, queriesByLanguage.kuery);\n    var kqlQuery = (0, _from_kuery.buildQueryFromKql)(indexPattern, queriesByLanguage.kql);\n    var luceneQuery = (0, _from_lucene.buildQueryFromLucene)(queriesByLanguage.lucene, decorateQuery);\n    var filterQuery = (0, _from_filters.buildQueryFromFilters)(filters, decorateQuery, indexPattern);\n\n    return {\n      bool: {\n        must: [].concat(kueryQuery.must, kqlQuery.must, luceneQuery.must, filterQuery.must),\n        filter: [].concat(kueryQuery.filter, kqlQuery.filter, luceneQuery.filter, filterQuery.filter),\n        should: [].concat(kueryQuery.should, kqlQuery.should, luceneQuery.should, filterQuery.should),\n        must_not: [].concat(kueryQuery.must_not, kqlQuery.must_not, luceneQuery.must_not, filterQuery.must_not)\n      }\n    };\n  }\n\n  return buildESQuery;\n}",null]}