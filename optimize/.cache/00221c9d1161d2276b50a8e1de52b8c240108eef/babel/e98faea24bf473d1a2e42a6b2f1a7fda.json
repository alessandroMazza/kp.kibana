{"remainingRequest":"/home/mazza/kibana_6.20/kibana-6.2_Pirelli/node_modules/babel-loader/lib/index.js??ref--6-1!/home/mazza/kibana_6.20/kibana-6.2_Pirelli/src/core_plugins/kibana/common/utils/aggressive_parse.js","dependencies":[{"path":"/home/mazza/kibana_6.20/kibana-6.2_Pirelli/src/core_plugins/kibana/common/utils/aggressive_parse.js","mtime":1526650527226},{"path":"/home/mazza/kibana_6.20/kibana-6.2_Pirelli/node_modules/cache-loader/dist/cjs.js","mtime":1526650760833},{"path":"/home/mazza/kibana_6.20/kibana-6.2_Pirelli/node_modules/babel-loader/lib/index.js","mtime":1526650754489}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toJson = toJson;\nexports.replacer = replacer;\n\nvar _lodash = require('lodash');\n\n/**\n * Serializes the given object into a JSON string\n *\n * All properties that begin with $ throughout the entire object are omitted.\n * If a custom JSON serializer function is passed, then the given object is\n * passed through it before being re-stringified with the native stringify.\n *\n * The space argument is passed unaltered to the native stringify.\n */\nfunction toJson(object, jsonFn, space) {\n  if (jsonFn) {\n    // We reparse the stringified json so that we can lean on JSON.stringify's\n    // avoiding-infinite-recursion capabilities when stripping out any\n    // remaining properties that begin with a dollar sign ($)\n    object = JSON.parse(jsonFn(object));\n  }\n  return JSON.stringify(object, replacer, space);\n}\n\n/**\n * Returns the given value if the key does not begin with a dollar sign ($)\n */\nfunction replacer(key, value) {\n  return (0, _lodash.isString)(key) && (0, _lodash.startsWith)(key, '$') ? undefined : value;\n}",null]}