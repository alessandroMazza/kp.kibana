{"remainingRequest":"/home/mazza/kibana_6.20/kibana-6.2_Pirelli/node_modules/babel-loader/lib/index.js??ref--6-1!/home/mazza/kibana_6.20/kibana-6.2_Pirelli/src/ui/public/directives/validate_json.js","dependencies":[{"path":"/home/mazza/kibana_6.20/kibana-6.2_Pirelli/src/ui/public/directives/validate_json.js","mtime":1526650528263},{"path":"/home/mazza/kibana_6.20/kibana-6.2_Pirelli/node_modules/cache-loader/dist/cjs.js","mtime":1526650760833},{"path":"/home/mazza/kibana_6.20/kibana-6.2_Pirelli/node_modules/babel-loader/lib/index.js","mtime":1526650754489}],"contextDependencies":[],"result":["'use strict';\n\nvar _modules = require('ui/modules');\n\nvar _module = _modules.uiModules.get('kibana');\n\n_module.directive('validateJson', function () {\n  return {\n    restrict: 'A',\n    require: 'ngModel',\n    scope: {\n      'ngModel': '=',\n      'queryInput': '=?'\n    },\n    link: function link($scope, $elem, attr, ngModel) {\n      $scope.$watch('ngModel', validator);\n\n      function validator(newValue) {\n        if (!newValue || newValue.length === 0) {\n          setValid();\n          return;\n        }\n\n        // We actually need a proper object in all JSON inputs\n        newValue = (newValue || '').trim();\n        if (newValue[0] === '{' || newValue[0] === '[') {\n          try {\n            JSON.parse(newValue);\n            setValid();\n          } catch (e) {\n            setInvalid();\n          }\n        } else {\n          setInvalid();\n        }\n      }\n\n      function setValid() {\n        ngModel.$setValidity('jsonInput', true);\n      }\n\n      function setInvalid() {\n        ngModel.$setValidity('jsonInput', false);\n      }\n    }\n  };\n});",null]}