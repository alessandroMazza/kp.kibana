{"remainingRequest":"/home/mazza/kibana_6.20/kibana-6.2_Pirelli/node_modules/babel-loader/lib/index.js??ref--6-1!/home/mazza/kibana_6.20/kibana-6.2_Pirelli/src/core_plugins/kbn_doc_views/public/views/table.js","dependencies":[{"path":"/home/mazza/kibana_6.20/kibana-6.2_Pirelli/src/core_plugins/kbn_doc_views/public/views/table.js","mtime":1527851268730},{"path":"/home/mazza/kibana_6.20/kibana-6.2_Pirelli/node_modules/cache-loader/dist/cjs.js","mtime":1526650760833},{"path":"/home/mazza/kibana_6.20/kibana-6.2_Pirelli/node_modules/babel-loader/lib/index.js","mtime":1526650754489}],"contextDependencies":[],"result":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _doc_views = require('ui/registry/doc_views');\n\nvar _table = require('./table.html');\n\nvar _table2 = _interopRequireDefault(_table);\n\nvar _notifier = require('ui/notify/notifier');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n_doc_views.DocViewsRegistryProvider.register(function () {\n  return {\n    title: 'Table',\n    order: 10,\n    directive: {\n      template: _table2.default,\n      scope: {\n        hit: '=',\n        indexPattern: '=',\n        filter: '=',\n        columns: '=',\n        onAddColumn: '=',\n        onRemoveColumn: '='\n      },\n      controller: function controller($scope) {\n\n        $scope.copyToClipboard = function copyToClipboard(field) {\n          var notify = new _notifier.Notifier({\n            location: 'Copy to clipboard'\n          });\n\n          var textArea = document.createElement('textarea');\n          textArea.style.position = 'fixed';\n          textArea.style.top = 0;\n          textArea.style.left = 0;\n          textArea.style.width = '2em';\n          textArea.style.height = '2em';\n          textArea.style.padding = 0;\n          textArea.style.border = 'none';\n          textArea.style.outline = 'none';\n          textArea.style.boxShadow = 'none';\n          textArea.style.background = 'transparent';\n          textArea.value = $scope.flattened[field];\n\n          document.body.appendChild(textArea);\n\n          textArea.select();\n\n          try {\n            var successful = document.execCommand('copy');\n            if (successful) {\n              notify.info('Value copied');\n            } else {\n              notify.info('Value not copied');\n            }\n          } catch (err) {\n            console.log(err);\n            notify.info('Oops, unable to copy');\n          }\n\n          document.body.removeChild(textArea);\n        };\n\n        $scope.mapping = $scope.indexPattern.fields.byName;\n        $scope.flattened = $scope.indexPattern.flattenHit($scope.hit);\n        $scope.formatted = $scope.indexPattern.formatHit($scope.hit);\n        $scope.fields = _lodash2.default.keys($scope.flattened).sort();\n\n        $scope.canToggleColumns = function canToggleColumn() {\n          return _lodash2.default.isFunction($scope.onAddColumn) && _lodash2.default.isFunction($scope.onRemoveColumn);\n        };\n\n        $scope.toggleColumn = function toggleColumn(columnName) {\n          if ($scope.columns.includes(columnName)) {\n            $scope.onRemoveColumn(columnName);\n          } else {\n            $scope.onAddColumn(columnName);\n          }\n        };\n\n        $scope.isColumnActive = function isColumnActive(columnName) {\n          return $scope.columns.includes(columnName);\n        };\n\n        $scope.showArrayInObjectsWarning = function (row, field) {\n          var value = $scope.flattened[field];\n          return Array.isArray(value) && _typeof(value[0]) === 'object';\n        };\n      }\n    }\n  };\n});",null]}