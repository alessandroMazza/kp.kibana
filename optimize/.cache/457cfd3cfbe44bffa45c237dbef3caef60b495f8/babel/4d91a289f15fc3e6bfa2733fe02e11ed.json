{"remainingRequest":"/home/mazza/kibana_6.20/kibana-6.2_Pirelli/node_modules/babel-loader/lib/index.js??ref--6-1!/home/mazza/kibana_6.20/kibana-6.2_Pirelli/src/core_plugins/timelion/public/panels/timechart/tick_generator.js","dependencies":[{"path":"/home/mazza/kibana_6.20/kibana-6.2_Pirelli/src/core_plugins/timelion/public/panels/timechart/tick_generator.js","mtime":1526650526646},{"path":"/home/mazza/kibana_6.20/kibana-6.2_Pirelli/node_modules/cache-loader/dist/cjs.js","mtime":1526650760833},{"path":"/home/mazza/kibana_6.20/kibana-6.2_Pirelli/node_modules/babel-loader/lib/index.js","mtime":1526650754489}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = generateTicksProvider;\nfunction generateTicksProvider() {\n\n  function floorInBase(n, base) {\n    return base * Math.floor(n / base);\n  }\n\n  function generateTicks(axis) {\n    var returnTicks = [];\n    var tickSize = 2;\n    var delta = axis.delta;\n    var steps = 0;\n    var tickVal = void 0;\n    var tickCount = 0;\n\n    //Count the steps\n    while (Math.abs(delta) >= 1024) {\n      steps++;\n      delta /= 1024;\n    }\n\n    //Set the tick size relative to the remaining delta\n    while (tickSize <= 1024) {\n      if (delta <= tickSize) {\n        break;\n      }\n      tickSize *= 2;\n    }\n    axis.tickSize = tickSize * Math.pow(1024, steps);\n\n    //Calculate the new ticks\n    var tickMin = floorInBase(axis.min, axis.tickSize);\n    do {\n      tickVal = tickMin + tickCount++ * axis.tickSize;\n      returnTicks.push(tickVal);\n    } while (tickVal < axis.max);\n\n    return returnTicks;\n  }\n\n  return function (axis) {\n    return generateTicks(axis);\n  };\n}\nmodule.exports = exports[\"default\"];",null]}