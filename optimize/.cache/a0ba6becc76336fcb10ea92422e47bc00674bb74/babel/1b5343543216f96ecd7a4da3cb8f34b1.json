{"remainingRequest":"/home/mazza/kibana_6.20/kibana-6.2/kibana-6.2_TestVersion/node_modules/babel-loader/lib/index.js??ref--6-1!/home/mazza/kibana_6.20/kibana-6.2/kibana-6.2_TestVersion/src/core_plugins/kibana/public/dashboard/listing/dashboard_listing.js","dependencies":[{"path":"/home/mazza/kibana_6.20/kibana-6.2/kibana-6.2_TestVersion/src/core_plugins/kibana/public/dashboard/listing/dashboard_listing.js","mtime":1522053028007},{"path":"/home/mazza/kibana_6.20/kibana-6.2/kibana-6.2_TestVersion/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/mazza/kibana_6.20/kibana-6.2/kibana-6.2_TestVersion/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n//import * as images from '../plugins/kibana/assets';\n\n\nexports.DashboardListingController = DashboardListingController;\n\nvar _saved_object_registry = require('ui/saved_objects/saved_object_registry');\n\nrequire('ui/pager_control');\n\nrequire('ui/pager');\n\nvar _dashboard_constants = require('../dashboard_constants');\n\nvar _eui = require('@elastic/eui');\n\nvar _modals = require('ui/modals');\n\nvar _men = require('./dashboard_listing_men\\xF9/men\\xF9');\n\nvar _app_state = require('ui/state_management/app_state');\n\nrequire('./style/dashboard_listing.css');\n\nfunction DashboardListingController($injector, $location, $timeout, $scope, $rootScope, $route, $routeParams, $compile, PersistTitleAndId) {\n  var _this = this;\n\n  var $filter = $injector.get('$filter');\n  var confirmModal = $injector.get('confirmModal');\n  var Notifier = $injector.get('Notifier');\n  var pagerFactory = $injector.get('pagerFactory');\n  var Private = $injector.get('Private');\n  var timefilter = $injector.get('timefilter');\n  var config = $injector.get('config');\n  var dashboardConfig = $injector.get('dashboardConfig');\n  var kbnUrl = $injector.get('kbnUrl');\n\n  timefilter.disableAutoRefreshSelector();\n  timefilter.disableTimeRangeSelector();\n\n  var DashboardListingControllerThat = this;\n  //KP_START parser and grouper\n\n  //Navigation list function\n\n  function groupGroups(groupList, sep, pos, areThereAdditionalArguments) {\n    if (!areThereAdditionalArguments) {\n      var navigationList = [];\n      for (var gl = 0; gl < groupList.length; gl++) {\n        navigationList.push([groupList[gl][0][0].split(sep)[pos], groupList[gl][0][2]]);\n      }\n      return navigationList;\n    } else {\n      var navigationList = [];;\n      for (var gl = 0; gl < groupList.length; gl++) {\n        var navListToPush = [groupList[gl][0][0].split(sep)[pos], groupList[gl][0][2]];\n        var offsetIndex = groupList[gl][0].length - navListToPush.length;\n        for (var addIndex = 0; addIndex < offsetIndex; addIndex++) {\n          navListToPush.push(groupList[gl][0][offsetIndex + addIndex]);\n        }\n        navigationList.push(navListToPush);\n      }\n      return navigationList;\n    }\n  }\n\n  //End of Navigation list function\n\n  function stringify(array) {\n    if (Array.isArray(array)) {\n      for (var l = 0; l < array.length; l++) {\n        array[l] = String(array[l]);\n      }\n    } else {\n      array = String(array);\n    }\n    return array;\n  }\n\n  function uniques(array) {\n    function onlyUnique(value, index, self) {\n      return self.indexOf(value) === index;\n    }\n    return array.filter(onlyUnique);\n  }\n\n  function attributes(items, attribute) {\n    if (Array.isArray(items) && typeof attribute == \"string\") {\n      var attributeList = [];\n      for (var i = 0; i < items.length; i++) {\n        attributeList.push(items[i][attribute]);\n\n        ;\n      }\n      if (attributeList.length > 0) {\n        return attributeList;\n      } else {\n        return false;\n      }\n    } else {\n      alert(\"Passed a non array-like argument or attribute description must be of type string\");\n    }\n  }\n\n  function grouperTitles(titleList, sep) {\n    function checkIfAllIs(list, type) {\n      function testElement(arrayElement) {\n        if ((typeof arrayElement === 'undefined' ? 'undefined' : _typeof(arrayElement)) == type) {\n          return true;\n        } else {\n          return false;\n        }\n      };\n\n      if (Array.isArray(list) && typeof type == \"string\") {\n        return list.every(testElement, type);\n      } else {\n        alert(\"Passed a non array-like argument or specified invalid type\");\n      }\n    };\n\n    function splitParserCorrecter(splitString, sep) {\n      var splitted = splitString.split(sep);\n      if (splitted.length > 1) {\n        return splitted[0];\n      } else {\n        return null;\n      }\n    }\n\n    Array.prototype.clean = function (deleteValue) {\n      for (var i = 0; i < this.length; i++) {\n        if (this[i] == deleteValue) {\n          this.splice(i, 1);\n          i--;\n        }\n      }\n      return this;\n    };\n\n    function Parser(titleList, sep) {\n      if (checkIfAllIs(titleList, \"string\") && typeof sep == \"string\") {\n        var splitList = [];\n        for (var i = 0; i < titleList.length; i++) {\n          splitList.push(splitParserCorrecter(titleList[i], sep));\n        }\n        var cleanSplitList = splitList.clean(null);\n        var uniquesvar = uniques(cleanSplitList);\n        var Groups = [];\n        var GroupsIDs = [];\n        for (var i = 0; i < uniquesvar.length; i++) {\n          Groups.push([]);\n          GroupsIDs.push(uniquesvar[i]);\n          for (var j = 0; j < titleList.length; j++) {\n            if (splitParserCorrecter(titleList[j], sep) == uniquesvar[i]) {\n              Groups[i].push(titleList[j]);\n            }\n          }\n        }\n        var groupedGroups = [];\n        for (var i = 0; i < Groups.length; i++) {\n          groupedGroups.push(Groups[i]);\n          groupedGroups[i].Group = GroupsIDs[i];\n        }\n        return groupedGroups;\n      }\n    }\n\n    return Parser(titleList, sep);\n  }\n\n  function crossConcat(args, sep) {\n    if (typeof sep != \"string\") {\n      return false;\n    }\n    var length = new Array(args.length);\n    if (args.length > 0) {\n      for (var i = 0; i < args.length; i++) {\n        length[i] = args[i].length;\n      }\n      if (uniques(length).length == 1) {\n        if (!Array.isArray(args[0])) {\n          for (i = 0; i > args.length; i++) {\n            args[i] = [args[i]];\n          }\n        }\n        var reshape = new Array(args.length);\n        var intermediate = [];\n        for (var j = 0; j < args[0].length; j++) {\n          intermediate = [];\n          for (var k = 0; k < args.length; k++) {\n            intermediate.push(args[k][j]);\n          }\n          reshape[j] = intermediate;\n        }\n        var resh = reshape;\n        for (i = 0; i < reshape.length; i++) {\n          reshape[i] = reshape[i].join(sep);\n        }\n      }\n      return reshape;\n    }\n  }\n\n  function splitter(splitarray, sep) {\n    for (var j = 0; j < splitarray.length; j++) {\n      for (var i = 0; i < splitarray[j].length; i++) {\n        splitarray[j][i] = String(splitarray[j][i]).split(sep);\n      }\n    }\n    return splitarray;\n  }\n\n  function selectFirstSplit(array, position0, position1, sep) {\n    var selectedArray = [];\n    if (Array.isArray(array[0])) {\n      for (var i = 0; i < array.length; i++) {\n        selectedArray.push(String(array[i][position0]).split(sep)[position1]);\n      }\n    } else {\n      selectedArray = String(array).split(sep)[position1];\n    }\n    return selectedArray;\n  }\n\n  function arrayTakePosition(array, position) {\n    var arrayRet = [];\n    for (var i = 0; i < array.length; i++) {\n      arrayRet.push(array[i][position]);\n    }\n    return arrayRet;\n  }\n\n  var count = 1;\n  function generatePath(limit) {\n    if (count === limit) {\n      count = 1;\n    }\n    var path = \"../plugins/kibana/assets/K\" + count + \".svg\";\n    count++;\n    return path;\n  }\n\n  function sobstituteSubstring(injectedHtml, listLen, substringSub) {\n\n    var substituteList = [];\n    var count = 1;\n\n    for (var j = 0; j < listLen; j++) {\n      substituteList.push(generatePath(11));\n    };\n    var injHtmlList = [];\n    for (var i = 0; i < substituteList.length; i++) {\n      injHtmlList.push(injectedHtml.replace(substringSub, substituteList[i]));\n    }\n    return injHtmlList;\n  }\n\n  function sortSubList(groupList) {\n    var groupListToReturn = [];\n    for (var groupsIndex = 0; groupsIndex < groupList.length; groupsIndex++) {\n      var group = groupList[groupsIndex];\n      var supGroup = new Array(group.length).fill(null);\n      for (var groupIndex = 0; groupIndex < group.length; groupIndex++) {\n        /*var ind = group[groupIndex][0].lastIndexOf(\"_\");\n         var inde = group[groupIndex][0].substring(ind+1);\n            console.log(inde);\n         if(typeof(parseInt(inde)) === \"number\"){                \n            supGroup.splice(inde, 1);\n            supGroup.splice(inde, 0, group[groupIndex]);\n            }\n         else{\n             supGroup.push(group[groupIndex]);\n             }*/\n        if (group[groupIndex][0].indexOf(\"_0\") != -1) {\n          group.unshift(group[groupIndex]);\n          group.splice(groupIndex, 1);\n          break;\n        }\n\n        /*for(var q = 0; q < supGroup.length; q++){\n             if(supGroup[q] === null){\n               supGroup.splice(q,1);\n               q--;\n             }  \n            }*/\n      }\n      groupListToReturn.push(group);\n    }\n\n    return groupListToReturn;\n  }\n\n  //KP_END  parser and grouper\n\n\n  var limitTo = $filter('limitTo');\n  // TODO: Extract this into an external service.\n  var services = Private(_saved_object_registry.SavedObjectRegistryProvider).byLoaderPropertiesName;\n  var dashboardService = services.dashboards;\n  var notify = new Notifier({ location: 'Dashboard' });\n\n  var selectedItems = [];\n  var sortableProperties = new _eui.SortableProperties([{\n    name: 'title',\n    getValue: function getValue(item) {\n      return item.title.toLowerCase();\n    },\n    isAscending: true\n  }, {\n    name: 'description',\n    getValue: function getValue(item) {\n      return item.description.toLowerCase();\n    },\n    isAscending: true\n  }], 'title');\n\n  //TO DO add an reference to PersistedTitleAndIds in order to be used inside calculateItemsOnPage\n\n\n  var calculateItemsOnPage = function calculateItemsOnPage() {\n\n    var parentThat = _this;\n\n    _this.titleAndIdPersister = PersistTitleAndId;\n    _this.items = sortableProperties.sortItems(_this.items);\n    _this.pager.setTotalItems(_this.items.length);\n    _this.pageOfItems = limitTo(_this.items, _this.pager.pageSize, _this.pager.startIndex);\n\n    //KP_START LISTING MODIFICATIONS\n\n    _this.titleAttributes = [attributes(_this.pageOfItems, \"title\"), attributes(_this.pageOfItems, \"id\"), attributes(_this.pageOfItems, \"url\")];\n    var groupies = sortSubList(splitter(grouperTitles(crossConcat(_this.titleAttributes, \"separator\"), \"_\"), \"separator\"));\n    _this.groups = groupies.map(function (group) {\n      group.map(function (element) {\n        element.push(group.length);\n        return element;\n      });\n      return group;\n    });\n\n    //this.titlex = selectFirstSplit(arrayTakePosition(this.groups,0), 0, 1, \"_\");\n    _this.navigationList = groupGroups(_this.groups, \"_\", 0, true);\n\n    _this.replaceString = \"#/\";\n\n    // navigation function\n\n    _this.navigateToDashboardKnbUrl = function (dashboardUrl, additionalArguments) {\n      var replaceString = additionalArguments[0];\n      var persister = additionalArguments[1];\n      persister.setDashboardId(dashboardUrl.replace(replaceString, \"\"));\n      persister.setNavigationFromDashboardListing(true);\n      kbnUrl.change(dashboardUrl.replace(replaceString, \"\"));\n    };\n\n    // END navigation function\n\n    // Menù\n\n    //Menù attributes and styles  \n    var menuGenerator = function () {\n      var tableAttributes = [[\"id\", \"navigationTable\"], [\"border\", \"0\"], [\"height\", \"100%\"], [\"width\", \"70%\"], [\"border-collapse\", \"collapse\"]];\n      var tableCss = [[\"borderCollapse\", \"collapse\"], [\"borderColor\", \"black\"], [\"borderWidth\", \"1px\"]];\n      var tableDivCss = [[\"marginTop\", \"1.5vh\"], [\"width\", \"25vh\"], [\"height\", \"25vh\"], [\"borderWidth\", \"0.0vw\"], [\"borderStyle\", \"solid\"], [\"borderColor\", \"black\"], [\"cursor\", \"pointer\"], [\"display\", \"table-cell\"], [\"verticalAlign\", \"middle\"]];\n\n      /*var htmlSrc = [\"https://image.flaticon.com/icons/svg/204/204304.svg\",\"https://image.flaticon.com/icons/svg/164/164424.svg\" , \"https://image.flaticon.com/icons/svg/204/204288.svg\", \"https://image.flaticon.com/icons/svg/762/762632.svg\"]*/\n\n      var injectedHTMLFrame = '<Table style = \"height:100%;width:100%;border:solid;border-color:#0079a5;\"><tr height = \"20%\" style = \"background-color:#0079a5\" ><td><table style = \"height:100%;width:100%;\"><tr  style = \"vertical-align:middle;\" ><td  style =\"height:100%;width:70%;\" ><div class = \"textDiv\" style =\"position:relative;width:100%;height:100%;\"><a textAnchor = \"true\"  style =\"color:white;font-size:2.8vh;position:absolute;top:50%;transform:translate(20%, -50%);\"></a></Div></td><td style:\"width:30%;height:100%;\"><div style=\"position:relative;width:100%;height:100%;\"><a groupPopNumber = \"true\" style =\"color:white;fontSize:4.0vh;position:absolute;top:50%;transform:translate(800%, -50%);\"></a></div></td><tr></table></td></tr><tr><td>\\n<image src = \"HtmlSrcString\" style = \"width:100%;height:80%;padding:2.5vh;margin-top:1vh;\"></image></td></tr></Table>';\n\n      var injectedHTML = sobstituteSubstring(injectedHTMLFrame, parentThat.groups.length, \"HtmlSrcString\");\n\n      /*var injectedHTML = '<Table style = \"height:100%;width:100%;border:solid;border-color:rgb(68,114,196);\"><tr height = \"30%\" style = \"background-color:rgb(68,114,196)\" ><td><table style = \"height:100%;width:100%;\"><tr  style = \"vertical-align:middle;\" ><td  style =\"height:100%;width:50%;\" ><div class = \"textDiv\" style =\"position:relative;width:100%;height:100%;\"><a textAnchor = \"true\"  style =\"color:white;fontSize:4vw;position:absolute;top:50%;transform:translate(20%, -50%);\"></a></Div></td><td style:\"width:50%;height:100%;\"><div style=\"position:relative;width:100%;height:100%;\"><a style =\"color:white;fontSize:4vw;position:absolute;top:50%;transform:translate(20%, -50%);\">Number</a></div></td><tr></table></td></tr><tr><td><image src = \"../plugins/kibana/assets/138353.svg\" style = \"width:100%;height:80%;\"></image></td></tr></Table>'*/\n\n      //end menù attributes and styles \n\n      var TableDashBoard = new _men.DashboardTable(parentThat.groups.length, 3, \"menuAnchor\", tableAttributes, tableCss, tableDivCss);\n      TableDashBoard.generateTable();\n      TableDashBoard.setDivStyle(tableDivCss);\n      TableDashBoard.formatButtons();\n      TableDashBoard.setDivsChildren(injectedHTML, \"textAnchor\", \"grouppopnumber\");\n      TableDashBoard.setKibanaTitlesAndSetNavigationAndOtherAttributes(false, TableDashBoard.finalIdList, parentThat.navigationList, parentThat.navigateToDashboardKnbUrl, [parentThat.replaceString, parentThat.titleAndIdPersister]);\n      return TableDashBoard;\n    }();\n\n    //END Menù\n\n\n    // KP_END MODIFICATION\n  };\n\n  var fetchItems = function fetchItems() {\n    _this.isFetchingItems = true;\n\n    dashboardService.find(_this.filter, config.get('savedObjects:listingLimit')).then(function (result) {\n      _this.isFetchingItems = false;\n      _this.items = result.hits;\n      _this.totalItems = result.total;\n      _this.showLimitError = result.total > config.get('savedObjects:listingLimit');\n      _this.listingLimit = config.get('savedObjects:listingLimit');\n      calculateItemsOnPage();\n    });\n  };\n\n  var deselectAll = function deselectAll() {\n    selectedItems = [];\n  };\n\n  var selectAll = function selectAll() {\n    selectedItems = _this.pageOfItems.slice(0);\n  };\n\n  this.isFetchingItems = false;\n  this.items = [];\n  this.pageOfItems = [];\n  this.filter = $location.search().filter || '';\n\n  this.pager = pagerFactory.create(this.items.length, 20, 1);\n\n  this.hideWriteControls = dashboardConfig.getHideWriteControls();\n\n  $scope.$watch(function () {\n    return _this.filter;\n  }, function () {\n    deselectAll();\n    fetchItems();\n    $location.search('filter', _this.filter);\n  });\n\n  this.isAscending = function (name) {\n    return sortableProperties.isAscendingByName(name);\n  };\n  this.getSortedProperty = function () {\n    return sortableProperties.getSortedProperty();\n  };\n\n  this.sortOn = function sortOn(propertyName) {\n    sortableProperties.sortOn(propertyName);\n    deselectAll();\n    calculateItemsOnPage();\n  };\n\n  this.toggleAll = function toggleAll() {\n    if (this.areAllItemsChecked()) {\n      deselectAll();\n    } else {\n      selectAll();\n    }\n  };\n\n  this.toggleItem = function toggleItem(item) {\n    if (this.isItemChecked(item)) {\n      var index = selectedItems.indexOf(item);\n      selectedItems.splice(index, 1);\n    } else {\n      selectedItems.push(item);\n    }\n  };\n\n  this.isItemChecked = function isItemChecked(item) {\n    return selectedItems.indexOf(item) !== -1;\n  };\n\n  this.areAllItemsChecked = function areAllItemsChecked() {\n    return this.getSelectedItemsCount() === this.pageOfItems.length;\n  };\n\n  this.getSelectedItemsCount = function getSelectedItemsCount() {\n    return selectedItems.length;\n  };\n\n  this.deleteSelectedItems = function deleteSelectedItems() {\n    var doDelete = function doDelete() {\n      var selectedIds = selectedItems.map(function (item) {\n        return item.id;\n      });\n\n      dashboardService.delete(selectedIds).then(fetchItems).then(function () {\n        deselectAll();\n      }).catch(function (error) {\n        return notify.error(error);\n      });\n    };\n\n    confirmModal('You can\\'t recover deleted dashboards.', {\n      confirmButtonText: 'Delete',\n      onConfirm: doDelete,\n      defaultFocusedButton: _modals.ConfirmationButtonTypes.CANCEL,\n      title: 'Delete selected dashboards?'\n    });\n  };\n\n  this.onPageNext = function () {\n    deselectAll();\n    _this.pager.nextPage();\n    calculateItemsOnPage();\n  };\n\n  this.onPagePrevious = function () {\n    deselectAll();\n    _this.pager.previousPage();\n    calculateItemsOnPage();\n  };\n\n  this.getUrlForItem = function getUrlForItem(item) {\n    return '#' + (0, _dashboard_constants.createDashboardEditUrl)(item.id);\n  };\n\n  this.getEditUrlForItem = function getEditUrlForItem(item) {\n    return '#' + (0, _dashboard_constants.createDashboardEditUrl)(item.id) + '?_a=(viewMode:edit)';\n  };\n\n  this.getCreateDashboardHref = function getCreateDashboardHref() {\n    return '#' + _dashboard_constants.DashboardConstants.CREATE_NEW_DASHBOARD_URL;\n  };\n}",null]}