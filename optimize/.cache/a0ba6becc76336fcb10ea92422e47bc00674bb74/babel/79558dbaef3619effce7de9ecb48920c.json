{"remainingRequest":"/home/mazza/kibana_6.20/kibana-6.2/kibana-6.2_TestVersion/node_modules/babel-loader/lib/index.js??ref--6-1!/home/mazza/kibana_6.20/kibana-6.2/kibana-6.2_TestVersion/src/ui/public/utils/zoom_to_precision.js","dependencies":[{"path":"/home/mazza/kibana_6.20/kibana-6.2/kibana-6.2_TestVersion/src/ui/public/utils/zoom_to_precision.js","mtime":1518029539000},{"path":"/home/mazza/kibana_6.20/kibana-6.2/kibana-6.2_TestVersion/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/mazza/kibana_6.20/kibana-6.2/kibana-6.2_TestVersion/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.zoomToPrecision = zoomToPrecision;\n\nvar _decode_geo_hash = require('ui/utils/decode_geo_hash');\n\nvar maxPrecision = 12;\n/**\n * Map Leaflet zoom levels to geohash precision levels.\n * The size of a geohash column-width on the map should be at least `minGeohashPixels` pixels wide.\n */\n\nvar zoomPrecisionMap = {};\nvar minGeohashPixels = 16;\n\nfunction calculateZoomToPrecisionMap(maxZoom) {\n\n  for (var zoom = 0; zoom <= maxZoom; zoom += 1) {\n    if (typeof zoomPrecisionMap[zoom] === 'number') {\n      continue;\n    }\n    var worldPixels = 256 * Math.pow(2, zoom);\n    zoomPrecisionMap[zoom] = 1;\n    for (var precision = 2; precision <= maxPrecision; precision += 1) {\n      var columns = (0, _decode_geo_hash.geohashColumns)(precision);\n      if (worldPixels / columns >= minGeohashPixels) {\n        zoomPrecisionMap[zoom] = precision;\n      } else {\n        break;\n      }\n    }\n  }\n}\n\nfunction zoomToPrecision(mapZoom, maxPrecision, maxZoom) {\n  calculateZoomToPrecisionMap(typeof maxZoom === 'number' ? maxZoom : 21);\n  return Math.min(zoomPrecisionMap[mapZoom], maxPrecision);\n}",null]}