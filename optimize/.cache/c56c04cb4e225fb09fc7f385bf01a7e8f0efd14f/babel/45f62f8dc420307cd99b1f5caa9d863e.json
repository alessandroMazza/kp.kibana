{"remainingRequest":"/home/mazza/kibana_6.20/kibana-6.2_Mediamarket/node_modules/babel-loader/lib/index.js??ref--6-1!/home/mazza/kibana_6.20/kibana-6.2_Mediamarket/src/ui/public/vis/vis_update.js","dependencies":[{"path":"/home/mazza/kibana_6.20/kibana-6.2_Mediamarket/src/ui/public/vis/vis_update.js","mtime":1522422370494},{"path":"/home/mazza/kibana_6.20/kibana-6.2_Mediamarket/node_modules/cache-loader/dist/cjs.js","mtime":1522422536819},{"path":"/home/mazza/kibana_6.20/kibana-6.2_Mediamarket/node_modules/babel-loader/lib/index.js","mtime":1522422526854}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n// TODO: this should be moved to vis_update_state\n// Currently the migration takes place in Vis when calling setCurrentState.\n// It should rather convert the raw saved object before starting to instantiate\n// any JavaScript classes from it.\nvar updateVisualizationConfig = function updateVisualizationConfig(stateConfig, config) {\n  if (!stateConfig || stateConfig.seriesParams) return;\n  if (!['line', 'area', 'histogram'].includes(config.type)) return;\n\n  // update value axis options\n  var isUserDefinedYAxis = config.setYExtents;\n  var mode = ['stacked', 'overlap'].includes(config.mode) ? 'normal' : config.mode || 'normal';\n  config.valueAxes[0].scale = _extends({}, config.valueAxes[0].scale, {\n    type: config.scale || 'linear',\n    setYExtents: config.setYExtents || false,\n    defaultYExtents: config.defaultYExtents || false,\n    min: isUserDefinedYAxis ? config.yAxis.min : undefined,\n    max: isUserDefinedYAxis ? config.yAxis.max : undefined,\n    mode: mode\n  });\n\n  // update series options\n  var interpolate = config.smoothLines ? 'cardinal' : config.interpolate;\n  var stacked = ['stacked', 'percentage', 'wiggle', 'silhouette'].includes(config.mode);\n  config.seriesParams[0] = _extends({}, config.seriesParams[0], {\n    type: config.type || 'line',\n    mode: stacked ? 'stacked' : 'normal',\n    interpolate: interpolate,\n    drawLinesBetweenPoints: config.drawLinesBetweenPoints,\n    showCircles: config.showCircles,\n    radiusRatio: config.radiusRatio\n  });\n};\n\nexports.updateVisualizationConfig = updateVisualizationConfig;",null]}