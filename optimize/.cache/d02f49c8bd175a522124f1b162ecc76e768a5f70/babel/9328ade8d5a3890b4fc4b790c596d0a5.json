{"remainingRequest":"/home/mazza/kibana_6.20/kibana-6.2/kibana-6.2_TestVersion/node_modules/babel-loader/lib/index.js??ref--6-1!/home/mazza/kibana_6.20/kibana-6.2/kibana-6.2_TestVersion/src/ui/public/agg_response/tabify/_table.js","dependencies":[{"path":"/home/mazza/kibana_6.20/kibana-6.2/kibana-6.2_TestVersion/src/ui/public/agg_response/tabify/_table.js","mtime":1518029539000},{"path":"/home/mazza/kibana_6.20/kibana-6.2/kibana-6.2_TestVersion/node_modules/cache-loader/dist/cjs.js","mtime":1493198456000},{"path":"/home/mazza/kibana_6.20/kibana-6.2/kibana-6.2_TestVersion/node_modules/babel-loader/lib/index.js","mtime":1503096278000}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AggResponseTabifyTableProvider = AggResponseTabifyTableProvider;\nfunction AggResponseTabifyTableProvider() {\n  /**\n   * Simple table class that is used to contain the rows and columns that create\n   * a table. This is usually found at the root of the response or within a TableGroup\n   */\n  function Table() {\n    this.columns = null; // written with the first row\n    this.rows = [];\n  }\n\n  Table.prototype.title = function () {\n    if (this.$parent) {\n      return this.$parent.title;\n    } else {\n      return '';\n    }\n  };\n\n  Table.prototype.aggConfig = function (col) {\n    if (!col.aggConfig) {\n      throw new TypeError('Column is missing the aggConfig property');\n    }\n    return col.aggConfig;\n  };\n\n  Table.prototype.field = function (col) {\n    return this.aggConfig(col).getField();\n  };\n\n  Table.prototype.fieldFormatter = function (col) {\n    return this.aggConfig(col).fieldFormatter();\n  };\n\n  return Table;\n}",null]}