{"remainingRequest":"/home/mazza/kibana_6.20/kibana-6.2_Mediamarket/node_modules/babel-loader/lib/index.js??ref--6-1!/home/mazza/kibana_6.20/kibana-6.2_Mediamarket/src/utils/get_flattened_object.js","dependencies":[{"path":"/home/mazza/kibana_6.20/kibana-6.2_Mediamarket/src/utils/get_flattened_object.js","mtime":1522422368673},{"path":"/home/mazza/kibana_6.20/kibana-6.2_Mediamarket/node_modules/cache-loader/dist/cjs.js","mtime":1522422536819},{"path":"/home/mazza/kibana_6.20/kibana-6.2_Mediamarket/node_modules/babel-loader/lib/index.js","mtime":1522422526854}],"contextDependencies":[],"result":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.getFlattenedObject = getFlattenedObject;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction shouldReadKeys(value) {\n  return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value !== null && !Array.isArray(value);\n}\n\n/**\n *  Flattens a deeply nested object to a map of dot-separated\n *  paths pointing to all primative values **and arrays**\n *  from `rootValue`.\n *\n *  example:\n *    getFlattenedObject({ a: { b: 1, c: [2,3] } })\n *    // => { 'a.b': 1, 'a.c': [2,3] }\n *\n *  @param {Object} rootValue\n *  @returns {Object}\n */\nfunction getFlattenedObject(rootValue) {\n  if (!shouldReadKeys(rootValue)) {\n    throw new TypeError('Root value is not flatten-able, received ' + rootValue);\n  }\n\n  return function flatten(acc, prefix, object) {\n    return Object.keys(object).reduce(function (acc, key) {\n      var value = object[key];\n      var path = prefix ? prefix + '.' + key : key;\n\n      if (shouldReadKeys(value)) {\n        return flatten(acc, path, value);\n      } else {\n        return _extends({}, acc, _defineProperty({}, path, value));\n      }\n    }, acc);\n  }({}, '', rootValue);\n}",null]}